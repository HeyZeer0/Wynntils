buildscript {
    repositories {
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.1'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'

def versionObj = new Version(major: 0, minor: 0, revision: 36)

version = versionObj.toString()
group = "cf.wynntils"
archivesBaseName = "Wynntils"

sourceCompatibility = "1.8"
targetCompatibility = "1.8"
compileJava.options.encoding = 'UTF-8'

minecraft {
    version = "1.12.2-14.23.4.2705"
    runDir = "run"

    mappings = "snapshot_20171003"
    makeObfSourceJar = false
}

repositories {
    mavenCentral()
    jcenter()
}

configurations {
    embed
    compile.extendsFrom(embed)
}

dependencies {
    embed fileTree(dir: 'lib', include: ['*.jar'])
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    from configurations.embed.collect { it.isDirectory() ? it : zipTree(it) }
}

reobfJar {
    dependsOn shadowJar
}

shadowJar {
    baseName = archivesBaseName + "-" + version
    classifier = null
    version = null
    configurations = [project.configurations.compile]
    relocate "org.slf4j", "cf.wynntils.relocate.org.slf4j"
    relocate "org.json", "cf.wybbtuls.relocate.org.json"
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.4'
}

class Version {
    String major, minor, revision

    static String getBuild() {
        System.getenv("BUILD_NUMBER") ?: System.getProperty("BUILD_NUMBER") ?: "DEV"
    }

    String toString() {
        "${major}.${minor}.${revision}_$build"
    }
}
